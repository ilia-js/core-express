generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EncryptedRecord {
  createdAt DateTime  @db.Timestamptz(6)
  data      Bytes
  id        String    @id @default(uuid()) @db.Uuid
  type      String    @db.VarChar(255)
  updatedAt DateTime? @db.Timestamptz(6)
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.Uuid
}

model Tag {
  createdAt DateTime      @default(now()) @db.Timestamptz(6)
  id        String        @id @default(uuid()) @db.Uuid
  name      String        @unique @db.VarChar(255)
  updatedAt DateTime?     @db.Timestamptz(6)
  user      User          @relation(fields: [userId], references: [id])
  userId    String        @db.Uuid
  words     TagsOnWords[]
}

model TagsOnWords {
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  word      Word     @relation(fields: [wordId], references: [id])
  wordId    String   @db.Uuid

  @@id([wordId, tagId])
}

model Translation {
  id        String    @id @default(uuid()) @db.Uuid
  text      String    @db.Char(1000)
  createdAt DateTime  @db.Timestamptz(6)
  updatedAt DateTime? @db.Timestamptz(6)
  word      Word      @relation(fields: [wordId], references: [id])
  wordId    String    @db.Uuid
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.Uuid
}

model User {
  createdAt        DateTime          @default(now()) @db.Timestamptz(6)
  encryptedRecords EncryptedRecord[]
  email            String            @unique @db.VarChar(255)
  firstName        String            @db.VarChar(255)
  hash             String            @db.VarChar(60)
  id               String            @id @default(uuid()) @db.Uuid
  tags             Tag[]
  tagsOnWords      TagsOnWords[]
  translations     Translation[]
  lastName         String            @db.VarChar(255)
  updatedAt        DateTime?         @db.Timestamptz(6)
  username         String            @unique @db.VarChar(255)
  words            Word[]
}

model Word {
  createdAt    DateTime      @default(now()) @db.Timestamptz(6)
  id           String        @id @default(uuid()) @db.Uuid
  tags         TagsOnWords[]
  title        String        @unique @db.VarChar(255)
  translations Translation[]
  updatedAt    DateTime?     @db.Timestamptz(6)
  user         User          @relation(fields: [userId], references: [id])
  userId       String        @db.Uuid
}
